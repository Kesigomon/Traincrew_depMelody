on:
  push:
    branches:
      - main
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ 'x64', 'x86' ]
        standalone: [ true, false ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup dotnet 8.0.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      - name: Build Exe
        working-directory: ./Traincrew_depMelody
        run: |
          dotnet publish -c Release \
            -o ../out \
            -r win-${{ matrix.platform }} \
            -p:PublishSingleFile=true \
            -p:EnableWindowsTargeting=true \
            --self-contained ${{ matrix.standalone }}
      - name: Zip binaries
        run: |
          cd out
          zip -r ../out.zip .
      - name: Calc new release tag
        id: get_release
        # latestのversionのパッチバージョンを上げたバージョンを出力する
        run: echo ::set-output name=tag::$(echo ${{ github.ref }} | \
          sed -e 's/refs\/tags\/v//g' | \
          awk -F. '{$3+=1; OFS="."; print $1,$2,$3}')
      - name: Create Bumped Release tag
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_release.outputs.tag }}
          release_name: Release ${{ steps.get_release.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.9.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: out.zip
          asset_name: Traincrew_depMelody-${{ matrix.platform }}${{ (matrix.standalone && '-standalone') || '' }}.zip
          tag: ${{ steps.get_release.outputs.tag }}
          overwrite: true